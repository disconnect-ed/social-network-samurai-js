{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Message/UserMessage.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["DialogItem","props","path","id","react_default","a","createElement","NavLink","className","to","src","alt","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","UserMessage","avatar","photos","small","index_es","icon","faUser","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","messages","m","type","Message_UserMessage","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","authUserProfile","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","inherits","_super","createSuper","classCallCheck","this","apply","arguments","createClass","value","React"],"mappings":"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","file":"static/js/4.fde9f474.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <NavLink className='users-dialogs-wrap' to={path}>\r\n        <div className='users-dialogs-inner col-12 d-flex align-items-center pt-2 pb-2'>\r\n            <div className='users-dialogs__img mr-3'>\r\n                <img\r\n                    src=\"https://steamuserimages-a.akamaihd.net/ugc/961978797800081925/3616ABAAC38C051265A609459A935D7AB9221156/?imw=506&imh=284&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=true\"\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    </NavLink>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className='row mb-4'>\r\n            <div className=\"col-md-1 col-2 mr-3\">\r\n                <div className='users-dialogs__img mr-3'>\r\n                    <img\r\n                        src=\"https://steamuserimages-a.akamaihd.net/ugc/961978797800081925/3616ABAAC38C051265A609459A935D7AB9221156/?imw=506&imh=284&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=true\"\r\n                        alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-5  col-8 users-dialogs__text\">\r\n                <div className='users-dialogs__text'>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className='mb-4 pt-2'>\r\n                <Field component={Textarea}\r\n                       className='form-control'\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Введите ваше сообщение...' name=\"newMessageBody\" />\r\n            </div>\r\n            <div className='text-right'>\r\n                <button className='btn btn-success'>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UserMessage = (props) => {\r\n    return (\r\n        <div className='d-flex mb-4 justify-content-end'>\r\n            <div className=\"col-lg-5 col-md-6 col-8 users-dialogs__text_user\">\r\n                <div className='users-dialogs__text_user'>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-1 col-2 mr-3 ml-2\">\r\n                <div className='users-dialogs__img d-flex justify-content-center align-items-center'>\r\n                    {props.avatar.photos.small ?\r\n                        <img\r\n                            src={props.avatar.photos.small}\r\n                            alt=\"\"/>\r\n                        :\r\n                        <div><FontAwesomeIcon icon={faUser}/></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMessage;","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport UserMessage from \"./Message/UserMessage\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => m.type ? <UserMessage avatar={props.avatar} message={m.message} key={m.id} /> :\r\n        <Message message={m.message} key={m.id} />\r\n    );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-xl-3 d-xl-block d-none'>\r\n                <div className=\"users-dialogs\">\r\n                    { dialogsElements }\r\n                </div>\r\n            </div>\r\n            <div className='d-xl-none d-block col-12 mb-4'>\r\n                <div className=\"users-dialogs users-dialogs_small\">\r\n                    { dialogsElements }\r\n                </div>\r\n            </div>\r\n            <div className='col-xl-9 col-lg-12'>\r\n                <div className=\"user-messages-wrap p-3\">\r\n                    <div className=\"user-messages \">\r\n                        <div>{ messagesElements }</div>\r\n                    </div>\r\n                    <hr/>\r\n                    <AddMessageForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport './Dialogs.css'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        avatar: state.auth.authUserProfile\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}