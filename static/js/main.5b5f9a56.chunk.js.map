{"version":3,"sources":["redux/dialogs-reducer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/Paginator/Paginator.module.css","assets/images/preloader.svg","components/common/FormsControls/FormsControls.js","assets/images/user.png","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderDropDown/HeaderDropDown.jsx","components/Header/Menu/Menu.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","App.js","index.js","redux/profile-reducer.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","arguments","length","undefined","action","body","Object","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","concat","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","ProfileStatusWithHooks","props","_useState","useState","_useState2","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","save","setSave","_useState3","status","_useState4","setStatus","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","editMode","className","value","onChange","e","currentTarget","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","variant","disabled","onClick","updateStatus","then","setTimeout","module","exports","paginator","pageNumber","selectedPage","__webpack_require__","p","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","styles","formControl","Textarea","restProps","child","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","rows","Input","bootstrap","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","Boolean","window","location","hostname","match","Navbar","react_default","NavLink","to","index_es","icon","faUser","faEnvelope","faUsers","faNewspaper","faMusic","faCog","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread2","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","count","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","Pagination","Prev","Item","active","key","Next","User","user","photos","small","src","alt","size","Button","some","Users","objectWithoutProperties","common_Paginator_Paginator","components_Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Preloader","Fragment","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","_callee","_context","totalCount","_x","HeaderDropDown","avatar","DropdownButton","as","ButtonGroup","toLowerCase","title","Link","Menu","showMenu","faBars","Header","menu","Container","fluid","esm_Navbar","bg","Brand","href","Nav","isAuth","Header_HeaderDropDown_HeaderDropDown","Header_Menu_Menu","authUserProfile","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_response$data$data","_login","getAuthUserProfile","url","authReducer","HeaderContainer","components_Header_Header","auth","_ref5","_callee5","_context5","reload","LoginReduxForm","reduxForm","form","handleSubmit","onTest","onSubmit","required","style","formSummaryError","stopSubmit","_error","Redirect","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","ProfileDataFormReduxForm","keys","contacts","Alert","Settings","large","target","files","ProfileInfo_ProfileDataForm","initialValues","SettingsContainer","authorizedUserId","getUserProfile","components_Settings_Settings","DialogsContainer","lazy","ProfileContainer","Promise","all","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","Header_HeaderContainer","components_Navbar_Navbar","Switch","Route","exact","path","render","Users_UsersContainer","Settings_SettingsContainer","components_Login_Login","AppContainer","withRouter","SamuraiJSApp","BrowserRouter","basename","process","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Heralt","posts","likesCount","addPostActionCreator","newPost","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t0","file","getState","abrupt","reject","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","D_React_projects_react_way_of_samurai_final_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","newPostText","postId","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.5b5f9a56.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет!'},\r\n        {id: 2, message: 'Не следует, однако забывать, что сложившаяся структура организации позволяет оценить значение дальнейших направлений развития. '},\r\n        {id: 3, message: 'Повседневная практика показывает, что начало повседневной работы по формированию позиции позволяет выполнять важные задания по разработке направлений прогрессивного развития.'},\r\n        {id: 4, message: 'Новая модель организационной деятельности позволяет выполнять важные задания по разработке системы обучения кадров, соответствует насущным потребностям.'},\r\n        {id: 5, message: 'Таким образом реализация намеченных плановых заданий способствует подготовки и реализации соответствующий условий активизации.'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, type: 'user', message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","import React, {useState, useEffect} from 'react';\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [save, setSave] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status).then(\r\n            setSave(true),\r\n            setTimeout(() => setSave(false), 3000)\r\n        )\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !props.editMode &&\r\n            <div>\r\n                <b className='d-inline'>Статус: </b> <span >{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {props.editMode &&\r\n            <div>\r\n                <div>\r\n                    <input className='form-control'\r\n                           value={status} onChange={onStatusChange} />\r\n                </div>\r\n                {save && <div className='mt-4'>\r\n                    <Alert variant={\"success\"}>\r\n                        Изменения успешно сохранены!\r\n                    </Alert>\r\n                </div>\r\n                }\r\n                <div className='mt-4'>\r\n                    <button disabled={save} onClick={deactivateEditMode} className='btn btn-success'>Сохранить</button>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2rb3o\",\"pageNumber\":\"Paginator_pageNumber__18_Rd\",\"selectedPage\":\"Paginator_selectedPage__1H9QW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.8c9e590f.svg\";","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea className='form-control' rows={4} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input className={`${props.bootstrap}`} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"518b1a89-aadc-4eb8-9145-43fcd9957159\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 12) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { faNewspaper } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <nav className='nav-menu' >\r\n                <div className='navbar-link-wrap' >\r\n                    <NavLink className='navbar-link' to=\"/profile\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faUser} />\r\n                        </span>\r\n                        <span className='navbar-link-text'>Профиль</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='navbar-link-wrap'>\r\n                    <NavLink className='navbar-link' to=\"/dialogs\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faEnvelope} />\r\n                        </span>\r\n                        <span>Сообщения</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='navbar-link-wrap'>\r\n                    <NavLink className='navbar-link' to=\"/users\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faUsers} />\r\n                        </span>\r\n                        <span>Пользователи</span></NavLink>\r\n                </div>\r\n                <div className='navbar-link-wrap'>\r\n                    <NavLink className='navbar-link' to=\"/news\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faNewspaper} />\r\n                        </span>\r\n                        <span>Новости</span></NavLink>\r\n                </div>\r\n                <div className='navbar-link-wrap'>\r\n                    <NavLink className='navbar-link' to=\"/music\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faMusic} />\r\n                        </span>\r\n                    <span>Музыка</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='navbar-link-wrap'>\r\n                    <NavLink className='navbar-link' to=\"/settings\" >\r\n                        <span className='navbar-link-icon'>\r\n                            <FontAwesomeIcon icon={faCog} />\r\n                        </span>\r\n                    <span>Настройки</span>\r\n                    </NavLink>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 12,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 12\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {Pagination} from \"react-bootstrap\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 5}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n\r\n        <Pagination>\r\n            {portionNumber > 1 &&\r\n            <Pagination.Prev onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}/>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <Pagination.Item active={(currentPage === p) ? true : false}\r\n                                            key={p}\r\n                                            onClick={(e) => {\r\n                                                onPageChanged(p);\r\n                                            }}>{p}</Pagination.Item>\r\n\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <Pagination.Next onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}/>\r\n            }\r\n        </Pagination>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './User.css';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className='user-wrap justify-content-center justify-content-sm-start'>\r\n            <div className='text-center'>\r\n                <NavLink className='user-link m-auto pt-2 pb-2 pr-2' to={'/profile/' + user.id}>\r\n                    <div className=\"user-avatar\">\r\n                        {user.photos.small != null ?\r\n                            <img src={user.photos.small} alt=\"\"/>\r\n                            :\r\n                            <div><FontAwesomeIcon size='5x' icon={faUser}/></div>\r\n                        }\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n            <div className='pl-4' >\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <p className='user-name'>{user.name}</p>\r\n                </NavLink>\r\n                <div>\r\n                    {user.followed\r\n                        ? <Button variant='danger' disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}>\r\n                            Unfollow</Button>\r\n                        : <Button variant='success' disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>\r\n                            Follow</Button>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <div className='d-flex justify-content-center'>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        </div>\r\n\r\n        <div className='row'>\r\n            {\r\n                users.map(u => <div className=\"col-xl-4 col-sm-6 col-12 mb-4\">\r\n                    <User user={u}\r\n                          followingInProgress={props.followingInProgress}\r\n                          key={u.id}\r\n                          unfollow={props.unfollow}\r\n                          follow={props.follow}\r\n                    />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isFetching) return <Preloader/>;\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport {ButtonGroup, DropdownButton, Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HeaderDropDown = ({login, avatar, logout}) => {\r\n    return (\r\n        <>\r\n            <DropdownButton\r\n                as={ButtonGroup}\r\n                id={`dropdown-variants-${'Primary'}`}\r\n                variant={'Primary'.toLowerCase()}\r\n                title={login}\r\n            >\r\n\r\n                <div className='text-center'>\r\n                    <Link to='/profile'>Мой профиль</Link>\r\n                </div>\r\n                <hr/>\r\n                <div className='text-center'>\r\n                    <Link to='/settings'>Настройки</Link>\r\n                </div>\r\n                <hr/>\r\n                <div className='text-center'>\r\n                    <Button variant=\"danger\" onClick={logout}>Выйти</Button >\r\n                </div>\r\n            </DropdownButton>\r\n            <div className='header-avatar d-flex justify-content-center align-items-center' >\r\n                {avatar !== null && avatar.photos.small ?\r\n                    <img src={avatar.photos.small} alt=\"avatar\"/> :\r\n                    <div><FontAwesomeIcon icon={faUser}/></div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderDropDown;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {faBars, faCog, faEnvelope, faMusic, faNewspaper, faUser, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Menu = ({logout, showMenu}) => {\r\n    return (\r\n        <nav className='header-menu'>\r\n            <div className=\"header-menu__button_inner\">\r\n                <div className='header-menu__button' onClick={() => showMenu(false)}>\r\n                    <FontAwesomeIcon icon={faBars}/>\r\n                </div>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/profile\" onClick={() => showMenu(false)}>\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faUser}/>\r\n                        </span>\r\n                    <span className='header-menu-link-text'> Профиль</span>\r\n                </Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/dialogs\" onClick={() => showMenu(false)}>\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                        </span>\r\n                    <span> Сообщения</span>\r\n                </Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/users\" onClick={() => showMenu(false)} >\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faUsers}/>\r\n                        </span>\r\n                    <span> Пользователи</span></Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/news\" onClick={() => showMenu(false)}>\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faNewspaper}/>\r\n                        </span>\r\n                    <span> Новости</span></Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/music\" onClick={() => showMenu(false)}>\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faMusic}/>\r\n                        </span>\r\n                    <span> Музыка</span>\r\n                </Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <Link className='header-menu-link' to=\"/settings\" onClick={() => showMenu(false)}>\r\n                        <span className='header-menu-link-icon'>\r\n                            <FontAwesomeIcon icon={faCog}/>\r\n                        </span>\r\n                    <span> Настройки</span>\r\n                </Link>\r\n            </div>\r\n            <div className='header-menu-link-wrap'>\r\n                <div className='header-menu-link' onClick={logout}>\r\n                    <span>Выйти</span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport HeaderDropDown from \"./HeaderDropDown/HeaderDropDown\";\r\nimport {faBars,} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Menu from \"./Menu/Menu\";\r\n\r\nconst Header = (props) => {\r\n\r\n    const [menu, showMenu] = (useState(false))\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className='pl-0 pr-0'>\r\n                <header>\r\n                    <Navbar bg=\"primary\" variant=\"dark\">\r\n                        <Navbar.Brand href=\"/\">Социальная сеть</Navbar.Brand>\r\n                        <Nav className=\"ml-auto d-md-flex d-none\">\r\n                            {props.isAuth\r\n                                ? <HeaderDropDown login={props.login} logout={props.logout} avatar={props.avatar}/>\r\n                                : <NavLink to={'/login'}>Login</NavLink>}\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto d-md-none d-block\">\r\n                            <div className='header-menu__button' onClick={() => showMenu(true)}>\r\n                                <FontAwesomeIcon icon={faBars}/>\r\n                            </div>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </header>\r\n            </Container>\r\n            {menu &&\r\n            <Menu showMenu={showMenu} logout={props.logout} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\nconst SET_AUTH_USER_PROFILE = 'SET_AUTH_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    authUserProfile: null,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_PROFILE: {\r\n            return {...state, authUserProfile: action.authUserProfile}\r\n        }\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const setAuthUserProfile = (authUserProfile) => ({type: SET_AUTH_USER_PROFILE, authUserProfile})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n        //ФУНКЦИЯ ИЗ РЕДЬЮСЕРА PROFILE-REDUCER, ПОЛУЧАЕМ ПРОФИЛЬ АВТОРИЗИРОВАННОГО ПОЛЬЗОВАТЕЛЯ ПО ID\r\n        dispatch(getAuthUserProfile(id));\r\n    }\r\n}\r\n\r\nexport const getAuthUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setAuthUserProfile(response.data));\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport './Header.css'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    avatar: state.auth.authUserProfile\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport './Login.css'\r\n\r\nconst LoginForm = ({handleSubmit, error, onTest, captchaUrl}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='pb-3'>\r\n                    {createField(\"Email\", \"email\", [required], Input,\r\n                        {bootstrap: 'form-control'})}\r\n                </div>\r\n                <div className='pb-3'>\r\n                    {createField(\"Пароль\", \"password\", [required], Input,\r\n                        {type: \"password\", bootstrap: 'form-control'})}\r\n                </div>\r\n                <div className='d-flex justify-content-center pb-4'>\r\n                    <div>\r\n                        {createField(null, \"rememberMe\", [], Input,\r\n                            {type: \"checkbox\", bootstrap: 'form-check-input'})}\r\n                    </div>\r\n                    <div>Запомнить меня?</div>\r\n                </div>\r\n\r\n\r\n                { captchaUrl && <img src={captchaUrl} />}\r\n                { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button className='btn btn-success'>Войти</button>\r\n                </div>\r\n\r\n                <div className='pt-4'>\r\n                    <p onClick={onTest} className='login-test'>Войти в роли тестера</p>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    const onTest = () => {\r\n        props.login('yivat41432@gilfun.com', '1234567890',);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div className='login-form mt-5 text-center'>\r\n        <div className='pt-2 pb-2'>\r\n            <img className='login-logo' src=\"RD-logo-mini.png\" alt=\"logo\"/>\r\n        </div>\r\n        <h1 className='pb-3'>Авторизация</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} onTest={onTest} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error, save}) => {\r\n    return <form className='settings-data' onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div className='mt-4'>\r\n            <h5>Полное имя:</h5> {createField(\"Full name\", \"fullName\", [], Input,\r\n            {bootstrap: 'form-control'})}\r\n        </div>\r\n        <div className='mt-4 form-check'>\r\n            <span>\r\n                { createField(\"\", \"lookingForAJob\", [], Input,\r\n                    {type: \"checkbox\", bootstrap: 'form-check-input'} )}\r\n            </span>\r\n            <h5>Ищу работу?</h5>\r\n        </div>\r\n\r\n        <div className='mt-4'>\r\n            <h5>Мои профессиональные навыки:</h5>\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div className='mt-4'>\r\n            <h5>Обо мне:</h5>\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div className='mt-4'>\r\n            <h5>Контакты:</h5> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className='mt-3'>\r\n            <h6>{key}:</h6>\r\n                {createField(key, \"contacts.\" + key, [], Input, {bootstrap: 'form-control'})}\r\n            </div>\r\n        })}\r\n        </div>\r\n        {save && <div className='mt-4'>\r\n            <Alert variant={\"success\"}>\r\n                Изменения успешно сохранены!\r\n            </Alert>\r\n        </div>\r\n        }\r\n        <div className='mt-4 text-center'><button disabled={save} className='btn btn-success'>Сохранить</button></div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport ProfileDataForm from \"../Profile/ProfileInfo/ProfileDataForm\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"../Profile/ProfileInfo/ProfileStatusWithHooks\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Settings = ({profile, savePhoto, saveProfile, updateStatus, status}) => {\r\n\r\n    const [save, setSave] = useState(false)\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            setSave(true),\r\n            setTimeout(() => setSave(false), 3000)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='settings-wrap p-3'>\r\n            <div className='row flex-md-row-reverse'>\r\n\r\n                <div className=\"col-xl-5 col-lg-6 col-md-12 ml-auto text-center\">\r\n                    <div className='settings-photo'>\r\n                        <div className='d-flex justify-content-center align-items-center mb-3'>\r\n                            <div className='settings-avatar-wrap text-center d-flex justify-content-center align-items-center'>\r\n                                {profile.photos.large ?\r\n                                    <img src={profile.photos.large} className='settings-avatar'/>\r\n                                    :\r\n                                    <div><FontAwesomeIcon icon={faUser}/></div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <h3>Изменить фотографию</h3>\r\n                        <div className=\"text-center\">\r\n                            <input className='file-upload' type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-status mt-5 mb-5\">\r\n                        <h3>Изменить статус</h3>\r\n                        <div className='text-center'>\r\n                            <ProfileStatusWithHooks editMode={true} status={status} updateStatus={updateStatus}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-lg-6 col-md-12\">\r\n                    <div>\r\n                        <h3>Изменить контактные данные</h3>\r\n                        <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                         save={save}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport Settings from \"./Settings\";\r\nimport \"./Settings.css\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass SettingsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.authorizedUserId;\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n        if (!this.props.profile) return <Preloader/>;\r\n        return (\r\n            <Settings profile={this.props.profile} savePhoto={this.props.savePhoto}\r\n                      saveProfile={this.props.saveProfile} updateStatus={this.props.updateStatus}\r\n                      status={this.props.status}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, savePhoto, saveProfile, updateStatus})(SettingsContainer);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport SettingsContainer from \"./components/Settings/SettingsContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(\"Some error occured\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Container className='pt-4'>\r\n                    <div className=\"row\">\r\n                        {this.props.isAuth &&\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-3 d-md-block d-none\">\r\n                            <Navbar/>\r\n                        </div>\r\n                        }\r\n                        <div className={this.props.isAuth ? \"col-xl-10 col-lg-9 col-md-9 col-12 p-0\" : \"col-12\"}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                                <Route path='/dialogs'\r\n                                       render={withSuspense(DialogsContainer)}/>\r\n\r\n                                <Route path='/profile/:userId?'\r\n                                       render={withSuspense(ProfileContainer)}/>\r\n\r\n                                <Route path='/users'\r\n                                       render={() => <UsersContainer/>}/>\r\n\r\n                                <Route path='/settings'\r\n                                       render={() => <SettingsContainer/>}/>\r\n\r\n                                <Route path='/login'\r\n                                       render={() => <LoginPage/>}/>\r\n\r\n                                <Route path='*'\r\n                                       render={() => <div className='col-12'>\r\n                                           <div className='text-center mt-5'>\r\n                                               <h1>Ой... 404</h1>\r\n                                               <h3>Страница не найдена :(</h3>\r\n                                           </div>\r\n                                       </div>}/>\r\n                            </Switch>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.auth.userId,\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst Heralt = 'https://steamuserimages-a.akamaihd.net/ugc/961978797800081925/3616ABAAC38C051265A609459A935D7AB9221156/?imw=506&imh=284&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=true'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 2, avatar: Heralt, name: 'Ruslan', message: 'Привет!!!', likesCount: 100},\r\n        {id: 1, avatar: Heralt, name: 'Геральт', message: 'Зараза!', likesCount: 12},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                name: action.newPost.name,\r\n                avatar: action.newPost.avatar,\r\n                message: action.newPost.text,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div className='m-auto text-center mt-5 pt-5'>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2qeBu\",\"error\":\"FormsControls_error__2va_Z\",\"formSummaryError\":\"FormsControls_formSummaryError__UU6vq\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}"],"sourceRoot":""}